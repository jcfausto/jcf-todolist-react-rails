I" 	(function() {
  this.TodoApp = React.createClass({
    getInitialState: function() {
      return {
        todos: this.props.todos
      };
    },
    create: function(todo) {
      return this.setState({
        todos: this.state.todos.concat(todo)
      });
    },
    render: function() {
      return <div>
      <TodoList todos={this.state.todos} />
      <TodoForm onCreate={this.create} />
    </div>;
    }
  });

  this.TodoList = React.createClass({
    render: function() {
      return <ul>
        {this.props.todos.map(
           function(todo, index){
             return (<TodoItem key={index} id={todo.id} description={todo.description} completed_at={todo.completed_at} />)
           }, this)
         }
      </ul>;
    }
  });

  this.TodoItem = React.createClass({
    getInitialState: function() {
      return {
        completed: this.props.completed_at != null
      };
    },
    handleChange: function() {
      return $.ajax({
        method: "PATCH",
        url: "/todos/" + this.props.id + "/complete",
        success: (function(_this) {
          return function() {
            return _this.setState({
              completed: !_this.state.completed
            });
          };
        })(this)
      });
    },
    render: function() {
      return <li>
      <label>
        <input type="checkbox" checked={this.state.completed} onChange={this.handleChange} />{this.props.description}
      </label>
    </li>;
    }
  });

  this.TodoForm = React.createClass({
    handleSubmit: function(e) {
      var form;
      e.preventDefault();
      form = React.findDOMNode(this.refs.todoForm);
      return $.ajax({
        method: "POST",
        url: "/todos",
        dataType: "JSON",
        data: $(form).serialize(),
        success: (function(_this) {
          return function(data) {
            _this.props.onCreate(data);
            return React.findDOMNode(_this.refs.description).value = "";
          };
        })(this)
      });
    },
    render: function() {
      return <form onSubmit={this.handleSubmit} ref="todoForm">
      <input name="utf8" type="hidden" value="âœ“"/>

      <div className="field">
        <input ref="description" type="text" name="todo[description]" id="todo_description" placeholder="I need to..." />
      </div>
    </form>;
    }
  });

}).call(this);
:ET